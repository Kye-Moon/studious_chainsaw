service: productHuntPostsIntegration

frameworkVersion: '>=3.19.0'
plugins:
  - serverless-iam-roles-per-function
  - serverless-export-env
  - serverless-python-requirements
  - "@agiledigital/serverless-sns-sqs-lambda"

provider:
  name: aws
  stage: dev
  runtime: python3.9
  region: ap-southeast-2
  logRetentionInDays: 60 # how long logs are kept in CloudWatch
  environment:
    # required Environment Variables. Don't remove.
    stage: ${self:provider.stage}
    region: ${self:provider.region}
    service: ${self:service}
  tags:
    Application: ${self:service}
    Stage: ${self:provider.stage}

configValidationMode: warn

package:
  patterns:
    - src/**
    #exclude
    - '!*'
    - '!node_modules'
    - '!Test/**'
    - '!documentation/**'
    - '!config/**'

functions:
  PHPostIntegrationHandler:
    handler: src/product_hunt_post_integration_handler.handler
    description: The product hunt post integration handler
    memorySize: 128
    timeout: 10
    layers:
      - ${self:custom.ServiceModulesLayerArn}
    iamRoleStatementsName: handler-write-back
    iamRoleStatements:
      - Effect: 'Allow'
        Action:
          - "sqs:ReceiveMessage"
          - "sqs:DeleteMessage"
          - "sqs:GetQueueAttributes"
        Resource:
          - "*"
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:DescribeTable
          - dynamodb:ListTables
        Resource:
          - ${self:custom.MentionsTableArn}
    environment:
      INTEGRATION_REQUEST_TOPIC_ARN: ${self:custom.IntegrationsTopicArn}
    events:
      - snsSqs:
          name: Event # Required - choose a name prefix for the event queue
          topicArn: ${self:custom.IntegrationsTopicArn} # Required - SNS topic to subscribe to
          batchSize: 1
          visibilityTimeout: 120 # optional (in seconds) - AWS default is 30 secs
          rawMessageDelivery: true # Optional - default value is true
          enabled: true # Optional - default value is true
          filterPolicy: # Optional - filter messages that are handled
            task_type:
              - PRODUCTHUNT_POST

custom:
  pythonRequirements:
    dockerizePip: non-linux
  description: handler for integration requests
  export-env: # serverless-export-env config
    filename: .awsenv # custom filename to avoid conflict with Serverless Framework '.env' auto loading feature
    overwrite: true
  ## Values to be imported from the API stack
  IntegrationsTopicArn:
    Fn::ImportValue: IntegrationsTopicArn
  MentionsTableArn:
    Fn::ImportValue: MentionsTableArn
  ServiceModulesLayerArn:
    Fn::ImportValue: sls-ServiceModulesLayer-dev-ServiceModulesLayerLambdaLayerQualifiedArn